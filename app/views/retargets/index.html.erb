<script src="/assets/validateretarget.js"></script>
<script src="/assets/amcharts.js" type="text/javascript"></script>
<link rel="stylesheet" type="text/css" media="all" href="/assets/daterangepicker-bs3.css" />
<script type="text/javascript" src="/assets/moment.js"></script>
<script type="text/javascript" src="/assets/daterangepicker.js"></script>
 <script type="text/javascript">
        var chart;
        var chartData = [];
        AmCharts.ready(function () {
          // first we generate some random data
          generateChartData();
          // SERIAL CHART
          chart = new AmCharts.AmSerialChart();
          chart.pathToImages = "/assets/";
          chart.zoomOutButton = {
          backgroundColor: '#000000',
                    backgroundAlpha: 0.15
                };
                chart.dataProvider = chartData;
                chart.categoryField = "date";

                // data updated event will be fired when chart is first displayed,
                // also when data will be updated. We'll use it to set some
                // initial zoom
                chart.addListener("dataUpdated", zoomChart);

                // AXES
                // Category
                var categoryAxis = chart.categoryAxis;
                categoryAxis.parseDates = true; // in order char to understand dates, we should set parseDates to true
                categoryAxis.minPeriod = "DD"; // as we have data with minute interval, we have to set "mm" here.             
                categoryAxis.gridAlpha = 0.07;
                categoryAxis.axisColor = "#DADADA";

                // Value
                var valueAxis = new AmCharts.ValueAxis();
                valueAxis.gridAlpha = 0.07;
                valueAxis.title = "";
                chart.addValueAxis(valueAxis);

                // GRAPH
                var graph = new AmCharts.AmGraph();
                graph.type = "line"; // try to change it to "column"
                graph.title = "red line";
                graph.valueField = "visits";
                graph.lineAlpha = 1;
                graph.lineColor = "#d1cf2a";
                graph.fillAlphas = 0.3; // setting fillAlphas to > 0 value makes it area graph
                chart.addGraph(graph);

                // CURSOR
                var chartCursor = new AmCharts.ChartCursor();
                chartCursor.cursorPosition = "mouse";
                chartCursor.categoryBalloonDateFormat = "JJ:NN, DD MMMM";
                chart.addChartCursor(chartCursor);

                // SCROLLBAR
                var chartScrollbar = new AmCharts.ChartScrollbar();

                chart.addChartScrollbar(chartScrollbar);

                // WRITE
                chart.write("chartdiv");
            });

            // generate some random data, quite different range
            function generateChartData() {
                // current date
                var firstDate = new Date();
        // var aa = new Array('1','2','3');
        var count_values=new Array();
            count_values=<%= @count_y %>;
   

var aa;


aa="<%= @variable %>";
        //alert(aa);
    var array = aa.split(',');
//alert(array.length);
//alert(array[0]);
   var newDate;
 var visits;
for(i=0;i<array.length;i++){

    newDate=array[i];

    visits=count_values[i];
    //alert(visits);
 chartData.push({
                        date: newDate,
                        visits: visits
                    });

}


       
                // now set 1000 minutes back                
                firstDate.setMinutes(firstDate.getDate() - 1000);

                // and generate 1000 data items starts
/*
                for (var i = 0; i < 1000; i++) {
                    var newDate = new Date(firstDate);
                    // each time we add one minute
                    newDate.setMinutes(newDate.getMinutes() + i);
                    // some random number     
                    var visits = Math.round(Math.random() * 40) + 10;
                    // add data item to the array                         
                    chartData.push({
                        date: newDate,
                        visits: visits
                    });
                }
*/
           // and generate 1000 data items ends
            }

            // this method is called when chart is first inited as we listen for "dataUpdated" event
            function zoomChart() {
                // different zoom methods can be used - zoomToIndexes, zoomToDates, zoomToCategoryValues
                chart.zoomToIndexes(chartData.length - 40, chartData.length - 1);
            }
        </script>
        
<div class="pcontent">
	<div align="center"><% if params[:aft] == '1' %> <p>Website submitted successfully. Manage your site retargets below.</p> <% end %></div>
  <h4 style="margin-top:0;margin-bottom:0;" id="notice" class="alert-header">
   	<%= flash[:notice] %>
  </h4>
  
  <div class="widget">
    <div class="widget-header">
   <div class="pull-right">
     <a data-toggle="modal" class="btn btn-success btn-mini" href="/retargets/new"><i class="icon-plus-sign icon-white"></i> Create new list</a>
   </div>
   <h3><a href="/retargets" style="color:#333;"><i class="icon-group"> </i>
     Retargeting Lists</a>
     <small>Create and manage "Lists" of web site visitors to retarget. </small>
   </h3>
    </div>
    <div class="widget-content">

<!-- Datepicker for the graph -->
		   <div id="reportrange" class="pull-right" style="background: #fff; cursor: pointer; padding: 5px 10px; border: 1px solid #ccc">
				<i class="glyphicon glyphicon-calendar icon-calendar icon-large"></i>
				<span></span> <b style="vertical-align: middle;" class="caret"></b>
		   </div>
			<script type="text/javascript">
			    $(document).ready(function() 
					{
						var today = new Date();
						var dd = today.getDate();
						var mm = today.getMonth()+1;
						var yyyy = today.getFullYear();
						var alltoget = yyyy+"-"+mm+"-"+dd

						jsStartDate = "<%= session[:startdate] %>";
						jsEndDate = "<%= session[:enddate] %>";
						syy = jsStartDate.substr(0,4);
						smm = jsStartDate.substr(5,2);
						sdd = jsStartDate.substr(8,2);
						eyy = jsEndDate.substr(0,4);
						emm = jsEndDate.substr(5,2);
						edd = jsEndDate.substr(8,2);
						var setStartDate = new Date();
						var setEndDate = new Date();
						setStartDate.setDate(sdd);
						setStartDate.setMonth(smm -1);
						setStartDate.setYear(syy);
						setEndDate.setDate(edd);
						setEndDate.setMonth(emm -1);
						setEndDate.setYear(eyy);
						var today = new Date();
						var dd = today.getDate();
						var mm = today.getMonth()+1;
						var yyyy = today.getFullYear();
						var alltoget = yyyy+"-"+mm+"-"+dd;
//alert(startdate);
					$('#reportrange').daterangepicker(
						{
							startDate: setStartDate,     //moment().subtract('days', 29),
							endDate:  setEndDate,
							minDate: '2012-01-01',
							maxDate: '2014-12-31',
							dateLimit: { days: 60 },
							showDropdowns: true,
							showWeekNumbers: true,
							timePicker: false,
							timePickerIncrement: 1,
							timePicker12Hour: true,
							ranges: {
							   'Today': [moment(), moment()],
							   'Yesterday': [moment().subtract('days', 1), moment().subtract('days', 1)],
							   'Last 7 Days': [moment().subtract('days', 6), moment()],
							   'Last 30 Days': [moment().subtract('days', 29), moment()],
							   'This Month': [moment().startOf('month'), moment().endOf('month')],
							   'Last Month': [moment().subtract('month', 1).startOf('month'), moment().subtract('month', 1).endOf('month')]
						},
						opens: 'left',
						buttonClasses: ['btn btn-default'],
						applyClass: 'btn-small btn-primary',
						cancelClass: 'btn-small',
						format: 'YYYY-MM-DD',
						separator: ' to ',
						locale: {
							applyLabel: 'Submit',
							fromLabel: 'From',
							toLabel: 'To',
							customRangeLabel: 'Custom Range',
							daysOfWeek: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr','Sa'],
							monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
							firstDay: 1
						}
					 },
					 function(start, end) {
					  console.log("Callback has been called!");
					  $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));
					 }
				  );
				  //Set the initial state of the picker label
				  //$('#reportrange span').html(moment().subtract('days', 29).format('MMMM D, YYYY') + ' - ' + moment().format('MMMM D, YYYY'));
				  $('#reportrange span').html(jsStartDate + ' - ' + jsEndDate);
			   });
			</script>
    <div style="margin-bottom:15px;border-color:#ddd;padding-top:10px;border-radius:5px;box-shadow: 0px 1px 1px rgba(66, 66, 66, 0.1);" class="chart-container">
   <h3>
     Visitors added per day
   </h3>
     <div id="chartdiv" style="width:100%; height:400px;"></div>
    </div>


    <div class="filterable" id="ads-table-container">
   
  <div class="btn-toolbar">
    <div class="btn-group">
   <a href="#" data-toggle="dropdown" class="btn dropdown-toggle">
     <% if params[:retarget_type]=="path" %>
       Path Lists
     <% elsif params[:retarget_type]=="query" %>
       Querystring Lists
     <% elsif params[:retarget_type]=="regex" %>
       Regular Expression Lists
     <% else %>
       All Lists
     <% end %>
     <span class="caret"></span>
   </a>
   <ul class="dropdown-menu" style="top:-380%">
     <li><%= link_to 'All Lists'%></li>
     <li ><%= link_to 'Path Lists', params.merge({:retarget_type => "path"}) %></li>
     <li><a href="/retargets?retarget_type=query">Querystring Lists</a></li>
     <li><a href="/retargets?retarget_type=regex">Regular Expression Lists</a></li>
   </ul>
    </div>
  </div>

  <div style="" class="ad-search-container pull-right">

   <div class="input-append">
   <%= form_tag retargets_path , :method=>"get" do %>
    <%= text_field_tag :search,nil,:class=>"input-medium search-query",:placeholder=>"Search List Name",:value=>params[:search] %>
    <%= submit_tag "search",:class=>"btn" %>
   <% end %>
  
   </div>

  </div>

  <div class="loading-container">
    <img alt="Loading..." src="images/loding.gif">
  </div>
  <%
     retargetsss=''
     if @retargets.present?
     exce = 'yes'
     @retargets.each do |retarget|
     exce = 'yes'
     retargetsss = retargetsss + retarget.id.to_s + ","
     end
     end
     if exce == 'yes'
     src=Tagaly3::SRC + "/adexchange/trackAudience/list/#{session[:site_id]}/#{retargetsss}"
     url = URI.parse(src)
     req = Net::HTTP::Get.new(url.to_s)
     res = Net::HTTP.start(url.host, url.port) {|http|
     http.request(req)
     }
     resp=res.body
     respcode=res.code
     $parsed = parsed = JSON.parse(resp)     
     #http.finish()
%>
  <table class="table table-striped table-bordered" id="segments-table">
    <thead class="widget-header ads-loader">
   <tr><th class="tbllft">List Name</th>
   <th width="1%">Type</th>
   <th width="18%">Value</th>
   <th width="1%">Duration</th>
   <th width="10%" rel="tooltip" data-original-title="How many people have been tagged in this segment in the last 30 days?">30d Size</th>
   <th width="7%" class="sorttable_nosort">Actions</th>
    </tr></thead>

    <tbody>
     <% @retargets.each do |retarget| %>
  <tr class="active">
   <td class="tbllft">
     <a href="/retargets/segment?id=<%= retarget['id']%>"><%= retarget['retargetName'] %></a>
	 <div style="float:right">&nbsp;<button class="btn btn-mini btn-inverse" disabled style="cursor:default">&nbsp;<%= retarget['version'].to_f %>&nbsp;</button>
   </td>
   <td><%= retarget.retargetType %></td>
   <td><%=
   retarget['retargetValue'] %></td>
   <td>
   <% if retarget['retargetName']=='All Visitors' %>
   <%= "∝" %>
   <% else %>   
   <%= retarget.duration %> days
   <% end %>
   </td>
   
   <td>
     <%=
     parsed["#{retarget['id']}"]
 %>
      </td>
   <td style=" font-size:14px;text-align:center;">
  <% if retarget['retargetName']=='All Visitors' %>
     <i rel="tooltip" class="icon-edit" data-original-title="All Visitors segments cannot be edited"></i>
  <% else %>
  	<% if retarget.status == 'active' %>
			<a target="_blank" href="/sites/tag?id=<%= retarget.siteId %>" data-original-title="Tag" rel="tooltip"><i class="icon-tag"></i></a>
			<a href="/retargets/<%= retarget.id %>/edit" target="_blank" data-original-title="Edit" rel="tooltip"> <i  class="icon-edit" data-original-title="All Visitors segments cannot be edited"></i>
			</a>&nbsp;<%= link_to '<i class="icon-trash" rel="tooltip" data-original-title="Delete"></i>'.html_safe, retarget_path(retarget),method: :delete, data: { confirm: 'Are you sure?' } %>
		<% else %>
			Deleted
		<% end %>
   <% end %>
   </td>
  </tr>
  <% end %>
    </tbody>
  </table>
  <div class="entry-count-container">
    <p>Showing 1 to <%= @retargets.length %> of <%= @retargets.length %> entries</p>
  </div>
  <div class="undernote">
    <i class="icon-refresh"></i> Refreshed every 3 hours.
  </div>

    </div>
</div>
    <%
else
%>

<center><h1>No Retargeting Lists were found</h1></center>
<%
end
%>

  </div>
</div>

